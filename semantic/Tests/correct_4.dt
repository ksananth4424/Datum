function_declarations:


function(dataset ds) -> product_of_columns(integer i1, integer i2) -> dataset{
    array(float) dummy;
    dummy = ds->col(i1);
    loop i from i1+1 to i2
    {
        dummy *= ds->col(i);
    }
    ds->col(i1) = dummy;
    return ds;
}



function(dataset ds) -> split_into_two_datasets(string col_name, integer threshold_value, integer return_dataset) -> dataset{
    dataset ds1 = ds;
    dataset ds2 = ds;

    ds2->col(col_name)->filter({return x >= threshold_value;})->drop();
    ds1->col(col_name)->filter({return x < threshold_value;})->drop();
    
    if(return_dataset == 0) {
        return ds1;
    }
    else{
        return ds2;
    }

    return ds1;
}


start:

dataset ds1 = read("parameters", "csv");      
dataset ds2;

dataset ds4 = ds2->split_into_two_datasets("status", 1, 1);
ds4->write("Inactive_projects", "csv");


dataset d5 = read("participants", "csv");

dataset d6 = d5->split_into_two_datasets("age", 18, 0);

